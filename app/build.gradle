apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.example.paichaiproject"
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    //implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'com.android.volley:volley:1.1.0'
    implementation files('libs/YouTubeAndroidPlayerApi.jar')
    implementation 'androidx.cardview:cardview:1.0.0'
    //noinspection GradleCompatible
    implementation 'com.android.support:design:27.1.1'
    /*volley란 웹 요청과 응답을 단순화시키기 위해 만들어진 라이브러리들 중 하나입니다.
    먼저 Request객체를 만들고 이 Request객체를 Request Queue에 넣어주기만 하면 Request Queue가
     알아서 웹서버에 요청하고 응답까지 받아 사용할 수 있도록 지정된 메소드를 호출해 줍니다.
      build.gradle 에 라이브러리 정보 추가한 것이고
      메니페스트.xml에 인터넷 권한을 등록하였다
    */
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha05'

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    implementation 'com.google.android.material:material:1.2.0'

}
